/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/css-loader/dist/cjs.js!./src/css/index.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var o=t("./node_modules/css-loader/dist/runtime/sourceMaps.js"),s=t.n(o),r=t("./node_modules/css-loader/dist/runtime/api.js"),d=t.n(r)()(s());d.push([e.id,"body {\n  display: grid;\n  grid-template-rows: 10vh 80vh 10vh;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nheader {\n  padding: 15px 10vw;\n  display: flex;\n  justify-content: space-between;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 200px calc(100vh - 150px);\n}\n\n/* \nform {\n  display: none;\n}\n\n.active {\n  display: flex;\n}\n\n.proj_cont {\n  height: 10vh;\n  width: 100px;\n  background-color: greenyellow;\n  border: red solid 2px;\n} */\n","",{version:3,sources:["webpack://./src/css/index.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,kCAAkC;EAClC,yCAAyC;AAC3C;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,gDAAgD;AAClD;;AAEA;;;;;;;;;;;;;;GAcG",sourcesContent:["body {\n  display: grid;\n  grid-template-rows: 10vh 80vh 10vh;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nheader {\n  padding: 15px 10vw;\n  display: flex;\n  justify-content: space-between;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 200px calc(100vh - 150px);\n}\n\n/* \nform {\n  display: none;\n}\n\n.active {\n  display: flex;\n}\n\n.proj_cont {\n  height: 10vh;\n  width: 100px;\n  background-color: greenyellow;\n  border: red solid 2px;\n} */\n"],sourceRoot:""}]);const a=d},"./node_modules/css-loader/dist/cjs.js!./src/css/reset.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var o=t("./node_modules/css-loader/dist/runtime/sourceMaps.js"),s=t.n(o),r=t("./node_modules/css-loader/dist/runtime/api.js"),d=t.n(r)()(s());d.push([e.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const a=d},"./node_modules/css-loader/dist/runtime/api.js":e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,s,r){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(d[i]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&d[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),n.push(c))}},n}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(s," */"),d=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([r]).join("\n")}return[n].join("\n")}},"./src/css/index.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>y});var o=t("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),s=t.n(o),r=t("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),d=t.n(r),a=t("./node_modules/style-loader/dist/runtime/insertBySelector.js"),i=t.n(a),l=t("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),c=t.n(l),u=t("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),p=t.n(u),m=t("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),h=t.n(m),f=t("./node_modules/css-loader/dist/cjs.js!./src/css/index.css"),A={};A.styleTagTransform=h(),A.setAttributes=c(),A.insert=i().bind(null,"head"),A.domAPI=d(),A.insertStyleElement=p();s()(f.default,A);const y=f.default&&f.default.locals?f.default.locals:void 0},"./src/css/reset.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>y});var o=t("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),s=t.n(o),r=t("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),d=t.n(r),a=t("./node_modules/style-loader/dist/runtime/insertBySelector.js"),i=t.n(a),l=t("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),c=t.n(l),u=t("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),p=t.n(u),m=t("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),h=t.n(m),f=t("./node_modules/css-loader/dist/cjs.js!./src/css/reset.css"),A={};A.styleTagTransform=h(),A.setAttributes=c(),A.insert=i().bind(null,"head"),A.domAPI=d(),A.insertStyleElement=p();s()(f.default,A);const y=f.default&&f.default.locals?f.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},d=[],a=0;a<e.length;a++){var i=e[a],l=o.base?i[0]+o.base:i[0],c=r[l]||0,u="".concat(l," ").concat(c);r[l]=c+1;var p=t(u),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var h=s(m,o);o.byIndex=a,n.splice(a,0,{identifier:u,updater:h,references:1})}d.push(u)}return d}function s(e,n){var t=n.domAPI(n);t.update(e);return function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,s){var r=o(e=e||[],s=s||{});return function(e){e=e||[];for(var d=0;d<r.length;d++){var a=t(r[d]);n[a].references--}for(var i=o(e,s),l=0;l<r.length;l++){var c=t(r[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}r=i}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var s=void 0!==t.layer;s&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,s&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},"./src/pages/page_layout.js":(e,n,t)=>{t.r(n),t.d(n,{page_layout:()=>o});t("./src/css/index.css"),t("./src/pages/project_todo.js");let o=(()=>{const e=document.querySelector("body"),n=document.createElement("header"),t=document.createElement("main"),o=document.createElement("footer"),s=document.createElement("span");s.textContent="To-Do List";const r=document.createElement("span");r.textContent="Welcome, User",n.appendChild(s),n.appendChild(r),e.appendChild(n);const d=document.createElement("div");d.id="side_bar";const a=document.createElement("div");a.id="projects";const i=document.createElement("div");i.id="p_section";const l=document.createElement("span");l.textContent="Your Projects";const c=document.createElement("span");c.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>';const u=document.createElement("div");u.id="projects_list",i.appendChild(l),i.appendChild(c),a.appendChild(i),a.appendChild(u);const p=document.createElement("div");p.id="tasks";const m=document.createElement("div");m.id="t_section";const h=document.createElement("span");h.textContent="Your Tasks";const f=document.createElement("span");f.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>';const A=document.createElement("div");A.id="tasks_list",m.appendChild(h),m.appendChild(f),p.appendChild(m),p.appendChild(A);const y=document.createElement("div");y.id="due_today";const v=document.createElement("div");v.id="d_section";const b=document.createElement("span");b.textContent="Due Today";const g=document.createElement("div");g.id="today_list",v.appendChild(b),y.appendChild(v),y.appendChild(g),d.appendChild(a),d.appendChild(p),d.appendChild(y),t.appendChild(d);const C=document.createElement("div");C.id="content",C.textContent="Content Goes Here",t.appendChild(C),e.appendChild(t),o.textContent="This is footer",e.appendChild(o)})()},"./src/pages/project_todo.js":(e,n,t)=>{t.r(n),t.d(n,{project_todo:()=>o});let o=e=>{const n=document.querySelector("#content");n.innerHTML="";const t=document.createElement("button");t.textContent="Add task",t.id="add_todo",n.appendChild(t)}},"./src/projects.js":(e,n,t)=>{t.r(n),t.d(n,{Project:()=>o});t("./src/todo.js");class o{constructor(e){this.name=e,this.todos=[]}changeName(e){this.name=e}addTodo(e){this.todos.push(e)}deleteTodo(e){let n=this.todos.map((e=>e.name)).indexOf(e);this.todos.splice(n,1)}returnTodoRemaining(){let e=0;return this.todos.forEach((n=>{n.completed||e++})),e}}},"./src/todo.js":(e,n,t)=>{t.r(n),t.d(n,{Todo:()=>o});class o{constructor(e,n="",t="",o=""){this.name=e,this.desc=n,this.due=t,this.prio=o,this.completed=!1}changeName(e){this.name=e}changeDesc(e){this.desc=e}changeDue(e){this.due=e}changePrio(e){this.prio=e}taskCompleted(){this.completed=!0}returnName(){return this.name}returnDesc(){return this.desc}returnDue(){return this.due}returnPrio(){return this.prio}}}},n={};function t(o){var s=n[o];if(void 0!==s)return s.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{t.r(o);t("./src/todo.js"),t("./src/projects.js"),t("./src/pages/page_layout.js"),t("./src/pages/project_todo.js"),t("./src/css/reset.css")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,